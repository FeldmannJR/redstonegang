/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.database.addons.tables;


import dev.feldmann.redstonegang.wire.game.base.database.addons.DefaultSchema;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Indexes;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Keys;
import dev.feldmann.redstonegang.wire.game.base.database.addons.tables.records.SafetimeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Safetime extends TableImpl<SafetimeRecord> {

    private static final long serialVersionUID = 1354535084;

    /**
     * The reference instance of <code>safetime</code>
     */
    public static final Safetime SAFETIME = new Safetime();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SafetimeRecord> getRecordType() {
        return SafetimeRecord.class;
    }

    /**
     * The column <code>safetime.id</code>.
     */
    public final TableField<SafetimeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>safetime.user_id</code>.
     */
    public final TableField<SafetimeRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>safetime.start</code>.
     */
    public final TableField<SafetimeRecord, Timestamp> START = createField("start", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>safetime.end</code>.
     */
    public final TableField<SafetimeRecord, Timestamp> END = createField("end", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>safetime</code> table reference
     */
    public Safetime() {
        this(DSL.name("safetime"), null);
    }

    /**
     * Create an aliased <code>safetime</code> table reference
     */
    public Safetime(String alias) {
        this(DSL.name(alias), SAFETIME);
    }

    /**
     * Create an aliased <code>safetime</code> table reference
     */
    public Safetime(Name alias) {
        this(alias, SAFETIME);
    }

    private Safetime(Name alias, Table<SafetimeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Safetime(Name alias, Table<SafetimeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Safetime(Table<O> child, ForeignKey<O, SafetimeRecord> key) {
        super(child, key, SAFETIME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SAFETIME_PRIMARY, Indexes.SAFETIME_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SafetimeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SAFETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SafetimeRecord> getPrimaryKey() {
        return Keys.KEY_SAFETIME_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SafetimeRecord>> getKeys() {
        return Arrays.<UniqueKey<SafetimeRecord>>asList(Keys.KEY_SAFETIME_PRIMARY, Keys.KEY_SAFETIME_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Safetime as(String alias) {
        return new Safetime(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Safetime as(Name alias) {
        return new Safetime(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Safetime rename(String name) {
        return new Safetime(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Safetime rename(Name name) {
        return new Safetime(name, null);
    }
}
