/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.addons.server.notificacoes.db.tables.records;


import dev.feldmann.redstonegang.wire.game.base.addons.server.notificacoes.db.tables.Notificacoes;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificacoesRecord extends UpdatableRecordImpl<NotificacoesRecord> implements Record3<String, Integer, String> {

    private static final long serialVersionUID = -1252556455;

    /**
     * Setter for <code>redstonegang_survival.notificacoes.type</code>.
     */
    public void setType(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>redstonegang_survival.notificacoes.type</code>.
     */
    public String getType() {
        return (String) get(0);
    }

    /**
     * Setter for <code>redstonegang_survival.notificacoes.owner</code>.
     */
    public void setOwner(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>redstonegang_survival.notificacoes.owner</code>.
     */
    public Integer getOwner() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>redstonegang_survival.notificacoes.vars</code>.
     */
    public void setVars(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>redstonegang_survival.notificacoes.vars</code>.
     */
    public String getVars() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Notificacoes.NOTIFICACOES.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Notificacoes.NOTIFICACOES.OWNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Notificacoes.NOTIFICACOES.VARS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getVars();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getVars();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificacoesRecord value1(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificacoesRecord value2(Integer value) {
        setOwner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificacoesRecord value3(String value) {
        setVars(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificacoesRecord values(String value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificacoesRecord
     */
    public NotificacoesRecord() {
        super(Notificacoes.NOTIFICACOES);
    }

    /**
     * Create a detached, initialised NotificacoesRecord
     */
    public NotificacoesRecord(String type, Integer owner, String vars) {
        super(Notificacoes.NOTIFICACOES);

        set(0, type);
        set(1, owner);
        set(2, vars);
    }
}
