/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.database.addons.tables.records;


import dev.feldmann.redstonegang.wire.game.base.database.addons.tables.Whitelistcmd;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WhitelistcmdRecord extends UpdatableRecordImpl<WhitelistcmdRecord> implements Record2<String, Timestamp> {

    private static final long serialVersionUID = 443400214;

    /**
     * Setter for <code>whitelistcmd.command</code>. Comando sem barra ex 'spawn'
     */
    public void setCommand(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>whitelistcmd.command</code>. Comando sem barra ex 'spawn'
     */
    public String getCommand() {
        return (String) get(0);
    }

    /**
     * Setter for <code>whitelistcmd.added</code>.
     */
    public void setAdded(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>whitelistcmd.added</code>.
     */
    public Timestamp getAdded() {
        return (Timestamp) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Timestamp> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Timestamp> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Whitelistcmd.WHITELISTCMD.COMMAND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Whitelistcmd.WHITELISTCMD.ADDED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getCommand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getAdded();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCommand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getAdded();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WhitelistcmdRecord value1(String value) {
        setCommand(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WhitelistcmdRecord value2(Timestamp value) {
        setAdded(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WhitelistcmdRecord values(String value1, Timestamp value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WhitelistcmdRecord
     */
    public WhitelistcmdRecord() {
        super(Whitelistcmd.WHITELISTCMD);
    }

    /**
     * Create a detached, initialised WhitelistcmdRecord
     */
    public WhitelistcmdRecord(String command, Timestamp added) {
        super(Whitelistcmd.WHITELISTCMD);

        set(0, command);
        set(1, added);
    }
}
