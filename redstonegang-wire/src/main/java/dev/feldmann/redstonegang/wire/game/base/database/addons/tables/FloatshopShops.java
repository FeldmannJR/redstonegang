/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.database.addons.tables;


import dev.feldmann.redstonegang.wire.game.base.database.addons.DefaultSchema;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Indexes;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Keys;
import dev.feldmann.redstonegang.wire.game.base.database.addons.tables.records.FloatshopShopsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FloatshopShops extends TableImpl<FloatshopShopsRecord> {

    private static final long serialVersionUID = -474698334;

    /**
     * The reference instance of <code>floatshop_shops</code>
     */
    public static final FloatshopShops FLOATSHOP_SHOPS = new FloatshopShops();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FloatshopShopsRecord> getRecordType() {
        return FloatshopShopsRecord.class;
    }

    /**
     * The column <code>floatshop_shops.id</code>.
     */
    public final TableField<FloatshopShopsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>floatshop_shops.npc_uuid</code>.
     */
    public final TableField<FloatshopShopsRecord, String> NPC_UUID = createField("npc_uuid", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>floatshop_shops.permission</code>.
     */
    public final TableField<FloatshopShopsRecord, String> PERMISSION = createField("permission", org.jooq.impl.SQLDataType.VARCHAR(60), this, "");

    /**
     * The column <code>floatshop_shops.linhas</code>.
     */
    public final TableField<FloatshopShopsRecord, Integer> LINHAS = createField("linhas", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("3", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>floatshop_shops</code> table reference
     */
    public FloatshopShops() {
        this(DSL.name("floatshop_shops"), null);
    }

    /**
     * Create an aliased <code>floatshop_shops</code> table reference
     */
    public FloatshopShops(String alias) {
        this(DSL.name(alias), FLOATSHOP_SHOPS);
    }

    /**
     * Create an aliased <code>floatshop_shops</code> table reference
     */
    public FloatshopShops(Name alias) {
        this(alias, FLOATSHOP_SHOPS);
    }

    private FloatshopShops(Name alias, Table<FloatshopShopsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FloatshopShops(Name alias, Table<FloatshopShopsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FloatshopShops(Table<O> child, ForeignKey<O, FloatshopShopsRecord> key) {
        super(child, key, FLOATSHOP_SHOPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FLOATSHOP_SHOPS_NPC_UUID, Indexes.FLOATSHOP_SHOPS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FloatshopShopsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FLOATSHOP_SHOPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FloatshopShopsRecord> getPrimaryKey() {
        return Keys.KEY_FLOATSHOP_SHOPS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FloatshopShopsRecord>> getKeys() {
        return Arrays.<UniqueKey<FloatshopShopsRecord>>asList(Keys.KEY_FLOATSHOP_SHOPS_PRIMARY, Keys.KEY_FLOATSHOP_SHOPS_NPC_UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopShops as(String alias) {
        return new FloatshopShops(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopShops as(Name alias) {
        return new FloatshopShops(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FloatshopShops rename(String name) {
        return new FloatshopShops(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FloatshopShops rename(Name name) {
        return new FloatshopShops(name, null);
    }
}
