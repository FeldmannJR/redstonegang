/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.addons.both.chat.db.tables.records;


import dev.feldmann.redstonegang.wire.game.base.addons.both.chat.db.tables.ChatHistory;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatHistoryRecord extends UpdatableRecordImpl<ChatHistoryRecord> implements Record7<Long, Integer, String, String, Timestamp, String, String> {

    private static final long serialVersionUID = 1729319455;

    /**
     * Setter for <code>chat_history.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>chat_history.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>chat_history.sender</code>.
     */
    public void setSender(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>chat_history.sender</code>.
     */
    public Integer getSender() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>chat_history.msg</code>.
     */
    public void setMsg(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>chat_history.msg</code>.
     */
    public String getMsg() {
        return (String) get(2);
    }

    /**
     * Setter for <code>chat_history.channel</code>.
     */
    public void setChannel(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>chat_history.channel</code>.
     */
    public String getChannel() {
        return (String) get(3);
    }

    /**
     * Setter for <code>chat_history.when</code>.
     */
    public void setWhen(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>chat_history.when</code>.
     */
    public Timestamp getWhen() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>chat_history.server</code>.
     */
    public void setServer(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>chat_history.server</code>.
     */
    public String getServer() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chat_history.receivers</code>.
     */
    public void setReceivers(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>chat_history.receivers</code>.
     */
    public String getReceivers() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Integer, String, String, Timestamp, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Integer, String, String, Timestamp, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ChatHistory.CHAT_HISTORY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ChatHistory.CHAT_HISTORY.SENDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ChatHistory.CHAT_HISTORY.MSG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ChatHistory.CHAT_HISTORY.CHANNEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return ChatHistory.CHAT_HISTORY.WHEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ChatHistory.CHAT_HISTORY.SERVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ChatHistory.CHAT_HISTORY.RECEIVERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getSender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getMsg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getChannel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getWhen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getServer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getReceivers();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getSender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getMsg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getChannel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getWhen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getServer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getReceivers();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatHistoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatHistoryRecord value2(Integer value) {
        setSender(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatHistoryRecord value3(String value) {
        setMsg(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatHistoryRecord value4(String value) {
        setChannel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatHistoryRecord value5(Timestamp value) {
        setWhen(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatHistoryRecord value6(String value) {
        setServer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatHistoryRecord value7(String value) {
        setReceivers(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChatHistoryRecord values(Long value1, Integer value2, String value3, String value4, Timestamp value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatHistoryRecord
     */
    public ChatHistoryRecord() {
        super(ChatHistory.CHAT_HISTORY);
    }

    /**
     * Create a detached, initialised ChatHistoryRecord
     */
    public ChatHistoryRecord(Long id, Integer sender, String msg, String channel, Timestamp when, String server, String receivers) {
        super(ChatHistory.CHAT_HISTORY);

        set(0, id);
        set(1, sender);
        set(2, msg);
        set(3, channel);
        set(4, when);
        set(5, server);
        set(6, receivers);
    }
}
