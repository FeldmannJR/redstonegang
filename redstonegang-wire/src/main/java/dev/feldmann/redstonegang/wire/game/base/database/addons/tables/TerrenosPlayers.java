/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.database.addons.tables;


import dev.feldmann.redstonegang.wire.game.base.database.addons.DefaultSchema;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Indexes;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Keys;
import dev.feldmann.redstonegang.wire.game.base.database.addons.tables.records.TerrenosPlayersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TerrenosPlayers extends TableImpl<TerrenosPlayersRecord> {

    private static final long serialVersionUID = -1896579268;

    /**
     * The reference instance of <code>terrenos_players</code>
     */
    public static final TerrenosPlayers TERRENOS_PLAYERS = new TerrenosPlayers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TerrenosPlayersRecord> getRecordType() {
        return TerrenosPlayersRecord.class;
    }

    /**
     * The column <code>terrenos_players.id</code>.
     */
    public final TableField<TerrenosPlayersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>terrenos_players.terreno_id</code>.
     */
    public final TableField<TerrenosPlayersRecord, Integer> TERRENO_ID = createField("terreno_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>terrenos_players.type</code>.
     */
    public final TableField<TerrenosPlayersRecord, Boolean> TYPE = createField("type", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>terrenos_players.player_id</code>.
     */
    public final TableField<TerrenosPlayersRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>terrenos_players.properties</code>.
     */
    public final TableField<TerrenosPlayersRecord, String> PROPERTIES = createField("properties", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>terrenos_players</code> table reference
     */
    public TerrenosPlayers() {
        this(DSL.name("terrenos_players"), null);
    }

    /**
     * Create an aliased <code>terrenos_players</code> table reference
     */
    public TerrenosPlayers(String alias) {
        this(DSL.name(alias), TERRENOS_PLAYERS);
    }

    /**
     * Create an aliased <code>terrenos_players</code> table reference
     */
    public TerrenosPlayers(Name alias) {
        this(alias, TERRENOS_PLAYERS);
    }

    private TerrenosPlayers(Name alias, Table<TerrenosPlayersRecord> aliased) {
        this(alias, aliased, null);
    }

    private TerrenosPlayers(Name alias, Table<TerrenosPlayersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TerrenosPlayers(Table<O> child, ForeignKey<O, TerrenosPlayersRecord> key) {
        super(child, key, TERRENOS_PLAYERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TERRENOS_PLAYERS_PRIMARY, Indexes.TERRENOS_PLAYERS_TERRENO_ENTRY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TerrenosPlayersRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TERRENOS_PLAYERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TerrenosPlayersRecord> getPrimaryKey() {
        return Keys.KEY_TERRENOS_PLAYERS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TerrenosPlayersRecord>> getKeys() {
        return Arrays.<UniqueKey<TerrenosPlayersRecord>>asList(Keys.KEY_TERRENOS_PLAYERS_PRIMARY, Keys.KEY_TERRENOS_PLAYERS_TERRENO_ENTRY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TerrenosPlayers as(String alias) {
        return new TerrenosPlayers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TerrenosPlayers as(Name alias) {
        return new TerrenosPlayers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TerrenosPlayers rename(String name) {
        return new TerrenosPlayers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TerrenosPlayers rename(Name name) {
        return new TerrenosPlayers(name, null);
    }
}
