/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.database.addons.tables.records;


import dev.feldmann.redstonegang.wire.game.base.database.addons.tables.FloatshopItems;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FloatshopItemsRecord extends UpdatableRecordImpl<FloatshopItemsRecord> implements Record12<Integer, Integer, byte[], Double, Integer, Double, Double, Double, Integer, Double, Double, Integer> {

    private static final long serialVersionUID = 1420324718;

    /**
     * Setter for <code>floatshop_items.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>floatshop_items.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>floatshop_items.shop_id</code>.
     */
    public void setShopId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>floatshop_items.shop_id</code>.
     */
    public Integer getShopId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>floatshop_items.itemstack</code>.
     */
    public void setItemstack(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>floatshop_items.itemstack</code>.
     */
    public byte[] getItemstack() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>floatshop_items.sell_price</code>.
     */
    public void setSellPrice(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>floatshop_items.sell_price</code>.
     */
    public Double getSellPrice() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>floatshop_items.max_difference</code>.
     */
    public void setMaxDifference(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>floatshop_items.max_difference</code>.
     */
    public Integer getMaxDifference() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>floatshop_items.buy_price</code>.
     */
    public void setBuyPrice(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>floatshop_items.buy_price</code>.
     */
    public Double getBuyPrice() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>floatshop_items.percentage_high</code>.
     */
    public void setPercentageHigh(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>floatshop_items.percentage_high</code>.
     */
    public Double getPercentageHigh() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>floatshop_items.percentage_low</code>.
     */
    public void setPercentageLow(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>floatshop_items.percentage_low</code>.
     */
    public Double getPercentageLow() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>floatshop_items.slot</code>.
     */
    public void setSlot(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>floatshop_items.slot</code>.
     */
    public Integer getSlot() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>floatshop_items.available</code>.
     */
    public void setAvailable(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>floatshop_items.available</code>.
     */
    public Double getAvailable() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>floatshop_items.regen_minute</code>.
     */
    public void setRegenMinute(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>floatshop_items.regen_minute</code>.
     */
    public Double getRegenMinute() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>floatshop_items.max_available</code>.
     */
    public void setMaxAvailable(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>floatshop_items.max_available</code>.
     */
    public Integer getMaxAvailable() {
        return (Integer) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Integer, byte[], Double, Integer, Double, Double, Double, Integer, Double, Double, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Integer, byte[], Double, Integer, Double, Double, Double, Integer, Double, Double, Integer> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return FloatshopItems.FLOATSHOP_ITEMS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return FloatshopItems.FLOATSHOP_ITEMS.SHOP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field3() {
        return FloatshopItems.FLOATSHOP_ITEMS.ITEMSTACK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return FloatshopItems.FLOATSHOP_ITEMS.SELL_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return FloatshopItems.FLOATSHOP_ITEMS.MAX_DIFFERENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return FloatshopItems.FLOATSHOP_ITEMS.BUY_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return FloatshopItems.FLOATSHOP_ITEMS.PERCENTAGE_HIGH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return FloatshopItems.FLOATSHOP_ITEMS.PERCENTAGE_LOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return FloatshopItems.FLOATSHOP_ITEMS.SLOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field10() {
        return FloatshopItems.FLOATSHOP_ITEMS.AVAILABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field11() {
        return FloatshopItems.FLOATSHOP_ITEMS.REGEN_MINUTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return FloatshopItems.FLOATSHOP_ITEMS.MAX_AVAILABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component3() {
        return getItemstack();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getSellPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getMaxDifference();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getBuyPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getPercentageHigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getPercentageLow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getSlot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component10() {
        return getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component11() {
        return getRegenMinute();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component12() {
        return getMaxAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value3() {
        return getItemstack();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getSellPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getMaxDifference();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getBuyPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getPercentageHigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getPercentageLow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getSlot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value10() {
        return getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value11() {
        return getRegenMinute();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getMaxAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value2(Integer value) {
        setShopId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value3(byte... value) {
        setItemstack(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value4(Double value) {
        setSellPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value5(Integer value) {
        setMaxDifference(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value6(Double value) {
        setBuyPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value7(Double value) {
        setPercentageHigh(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value8(Double value) {
        setPercentageLow(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value9(Integer value) {
        setSlot(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value10(Double value) {
        setAvailable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value11(Double value) {
        setRegenMinute(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord value12(Integer value) {
        setMaxAvailable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatshopItemsRecord values(Integer value1, Integer value2, byte[] value3, Double value4, Integer value5, Double value6, Double value7, Double value8, Integer value9, Double value10, Double value11, Integer value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FloatshopItemsRecord
     */
    public FloatshopItemsRecord() {
        super(FloatshopItems.FLOATSHOP_ITEMS);
    }

    /**
     * Create a detached, initialised FloatshopItemsRecord
     */
    public FloatshopItemsRecord(Integer id, Integer shopId, byte[] itemstack, Double sellPrice, Integer maxDifference, Double buyPrice, Double percentageHigh, Double percentageLow, Integer slot, Double available, Double regenMinute, Integer maxAvailable) {
        super(FloatshopItems.FLOATSHOP_ITEMS);

        set(0, id);
        set(1, shopId);
        set(2, itemstack);
        set(3, sellPrice);
        set(4, maxDifference);
        set(5, buyPrice);
        set(6, percentageHigh);
        set(7, percentageLow);
        set(8, slot);
        set(9, available);
        set(10, regenMinute);
        set(11, maxAvailable);
    }
}
