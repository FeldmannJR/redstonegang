/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.database.addons.tables;


import dev.feldmann.redstonegang.wire.game.base.database.addons.DefaultSchema;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Indexes;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Keys;
import dev.feldmann.redstonegang.wire.game.base.database.addons.tables.records.SimplecmdsWarpsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SimplecmdsWarps extends TableImpl<SimplecmdsWarpsRecord> {

    private static final long serialVersionUID = -392766714;

    /**
     * The reference instance of <code>simplecmds_warps</code>
     */
    public static final SimplecmdsWarps SIMPLECMDS_WARPS = new SimplecmdsWarps();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SimplecmdsWarpsRecord> getRecordType() {
        return SimplecmdsWarpsRecord.class;
    }

    /**
     * The column <code>simplecmds_warps.id</code>.
     */
    public final TableField<SimplecmdsWarpsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>simplecmds_warps.name</code>.
     */
    public final TableField<SimplecmdsWarpsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>simplecmds_warps.location</code>.
     */
    public final TableField<SimplecmdsWarpsRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>simplecmds_warps.public</code>.
     */
    public final TableField<SimplecmdsWarpsRecord, Boolean> PUBLIC = createField("public", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>simplecmds_warps</code> table reference
     */
    public SimplecmdsWarps() {
        this(DSL.name("simplecmds_warps"), null);
    }

    /**
     * Create an aliased <code>simplecmds_warps</code> table reference
     */
    public SimplecmdsWarps(String alias) {
        this(DSL.name(alias), SIMPLECMDS_WARPS);
    }

    /**
     * Create an aliased <code>simplecmds_warps</code> table reference
     */
    public SimplecmdsWarps(Name alias) {
        this(alias, SIMPLECMDS_WARPS);
    }

    private SimplecmdsWarps(Name alias, Table<SimplecmdsWarpsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SimplecmdsWarps(Name alias, Table<SimplecmdsWarpsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SimplecmdsWarps(Table<O> child, ForeignKey<O, SimplecmdsWarpsRecord> key) {
        super(child, key, SIMPLECMDS_WARPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SIMPLECMDS_WARPS_NAME, Indexes.SIMPLECMDS_WARPS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SimplecmdsWarpsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SIMPLECMDS_WARPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SimplecmdsWarpsRecord> getPrimaryKey() {
        return Keys.KEY_SIMPLECMDS_WARPS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SimplecmdsWarpsRecord>> getKeys() {
        return Arrays.<UniqueKey<SimplecmdsWarpsRecord>>asList(Keys.KEY_SIMPLECMDS_WARPS_PRIMARY, Keys.KEY_SIMPLECMDS_WARPS_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SimplecmdsWarps as(String alias) {
        return new SimplecmdsWarps(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SimplecmdsWarps as(Name alias) {
        return new SimplecmdsWarps(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SimplecmdsWarps rename(String name) {
        return new SimplecmdsWarps(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SimplecmdsWarps rename(Name name) {
        return new SimplecmdsWarps(name, null);
    }
}
