/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.addons.server.quests.db.tables;


import dev.feldmann.redstonegang.wire.game.base.addons.server.quests.db.DefaultSchema;
import dev.feldmann.redstonegang.wire.game.base.addons.server.quests.db.Indexes;
import dev.feldmann.redstonegang.wire.game.base.addons.server.quests.db.Keys;
import dev.feldmann.redstonegang.wire.game.base.addons.server.quests.db.tables.records.QuestInfosRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestInfos extends TableImpl<QuestInfosRecord> {

    private static final long serialVersionUID = -221455945;

    /**
     * The reference redstonegang of <code>quest_infos</code>
     */
    public static final QuestInfos QUEST_INFOS = new QuestInfos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuestInfosRecord> getRecordType() {
        return QuestInfosRecord.class;
    }

    /**
     * The column <code>quest_infos.id</code>.
     */
    public final TableField<QuestInfosRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>quest_infos.vars</code>.
     */
    public final TableField<QuestInfosRecord, String> VARS = createField("vars", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>quest_infos.comecou</code>.
     */
    public final TableField<QuestInfosRecord, Timestamp> COMECOU = createField("comecou", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>quest_infos.newstreak</code>.
     */
    public final TableField<QuestInfosRecord, Boolean> NEWSTREAK = createField("newstreak", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>quest_infos.daily</code>.
     */
    public final TableField<QuestInfosRecord, Boolean> DAILY = createField("daily", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>quest_infos.playerId</code>.
     */
    public final TableField<QuestInfosRecord, Integer> PLAYERID = createField("playerId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quest_infos.qid</code>.
     */
    public final TableField<QuestInfosRecord, Integer> QID = createField("qid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quest_infos.completa</code>.
     */
    public final TableField<QuestInfosRecord, Boolean> COMPLETA = createField("completa", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>quest_infos.terminar</code>.
     */
    public final TableField<QuestInfosRecord, Timestamp> TERMINAR = createField("terminar", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>quest_infos.terminou</code>.
     */
    public final TableField<QuestInfosRecord, Timestamp> TERMINOU = createField("terminou", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>quest_infos</code> table reference
     */
    public QuestInfos() {
        this(DSL.name("quest_infos"), null);
    }

    /**
     * Create an aliased <code>quest_infos</code> table reference
     */
    public QuestInfos(String alias) {
        this(DSL.name(alias), QUEST_INFOS);
    }

    /**
     * Create an aliased <code>quest_infos</code> table reference
     */
    public QuestInfos(Name alias) {
        this(alias, QUEST_INFOS);
    }

    private QuestInfos(Name alias, Table<QuestInfosRecord> aliased) {
        this(alias, aliased, null);
    }

    private QuestInfos(Name alias, Table<QuestInfosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> QuestInfos(Table<O> child, ForeignKey<O, QuestInfosRecord> key) {
        super(child, key, QUEST_INFOS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QUEST_INFOS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QuestInfosRecord, Integer> getIdentity() {
        return Keys.IDENTITY_QUEST_INFOS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuestInfosRecord> getPrimaryKey() {
        return Keys.KEY_QUEST_INFOS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuestInfosRecord>> getKeys() {
        return Arrays.<UniqueKey<QuestInfosRecord>>asList(Keys.KEY_QUEST_INFOS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuestInfos as(String alias) {
        return new QuestInfos(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuestInfos as(Name alias) {
        return new QuestInfos(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QuestInfos rename(String name) {
        return new QuestInfos(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QuestInfos rename(Name name) {
        return new QuestInfos(name, null);
    }
}
