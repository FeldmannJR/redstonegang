/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.wire.game.base.database.addons.tables;


import dev.feldmann.redstonegang.wire.game.base.database.addons.DefaultSchema;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Indexes;
import dev.feldmann.redstonegang.wire.game.base.database.addons.Keys;
import dev.feldmann.redstonegang.wire.game.base.database.addons.tables.records.WhitelistcmdRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Whitelistcmd extends TableImpl<WhitelistcmdRecord> {

    private static final long serialVersionUID = 1378101152;

    /**
     * The reference instance of <code>whitelistcmd</code>
     */
    public static final Whitelistcmd WHITELISTCMD = new Whitelistcmd();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WhitelistcmdRecord> getRecordType() {
        return WhitelistcmdRecord.class;
    }

    /**
     * The column <code>whitelistcmd.command</code>. Comando sem barra ex 'spawn'
     */
    public final TableField<WhitelistcmdRecord, String> COMMAND = createField("command", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "Comando sem barra ex 'spawn'");

    /**
     * The column <code>whitelistcmd.added</code>.
     */
    public final TableField<WhitelistcmdRecord, Timestamp> ADDED = createField("added", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>whitelistcmd</code> table reference
     */
    public Whitelistcmd() {
        this(DSL.name("whitelistcmd"), null);
    }

    /**
     * Create an aliased <code>whitelistcmd</code> table reference
     */
    public Whitelistcmd(String alias) {
        this(DSL.name(alias), WHITELISTCMD);
    }

    /**
     * Create an aliased <code>whitelistcmd</code> table reference
     */
    public Whitelistcmd(Name alias) {
        this(alias, WHITELISTCMD);
    }

    private Whitelistcmd(Name alias, Table<WhitelistcmdRecord> aliased) {
        this(alias, aliased, null);
    }

    private Whitelistcmd(Name alias, Table<WhitelistcmdRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Whitelistcmd(Table<O> child, ForeignKey<O, WhitelistcmdRecord> key) {
        super(child, key, WHITELISTCMD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WHITELISTCMD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WhitelistcmdRecord> getPrimaryKey() {
        return Keys.KEY_WHITELISTCMD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WhitelistcmdRecord>> getKeys() {
        return Arrays.<UniqueKey<WhitelistcmdRecord>>asList(Keys.KEY_WHITELISTCMD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Whitelistcmd as(String alias) {
        return new Whitelistcmd(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Whitelistcmd as(Name alias) {
        return new Whitelistcmd(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Whitelistcmd rename(String name) {
        return new Whitelistcmd(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Whitelistcmd rename(Name name) {
        return new Whitelistcmd(name, null);
    }
}
