/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.records;


import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.Permissions;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermissionsRecord extends UpdatableRecordImpl<PermissionsRecord> implements Record6<Integer, String, Short, Integer, Boolean, Integer> {

    private static final long serialVersionUID = -258223045;

    /**
     * Setter for <code>redstonegang_common.permissions.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>redstonegang_common.permissions.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>redstonegang_common.permissions.key</code>.
     */
    public void setKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>redstonegang_common.permissions.key</code>.
     */
    public String getKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>redstonegang_common.permissions.value</code>.
     */
    public void setValue(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>redstonegang_common.permissions.value</code>.
     */
    public Short getValue() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>redstonegang_common.permissions.owner</code>.
     */
    public void setOwner(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>redstonegang_common.permissions.owner</code>.
     */
    public Integer getOwner() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>redstonegang_common.permissions.type</code>.
     */
    public void setType(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>redstonegang_common.permissions.type</code>.
     */
    public Boolean getType() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>redstonegang_common.permissions.server</code>.
     */
    public void setServer(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>redstonegang_common.permissions.server</code>.
     */
    public Integer getServer() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Short, Integer, Boolean, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Short, Integer, Boolean, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Permissions.PERMISSIONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Permissions.PERMISSIONS.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Permissions.PERMISSIONS.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Permissions.PERMISSIONS.OWNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Permissions.PERMISSIONS.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Permissions.PERMISSIONS.SERVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getServer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getServer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value2(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value3(Short value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value4(Integer value) {
        setOwner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value5(Boolean value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value6(Integer value) {
        setServer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord values(Integer value1, String value2, Short value3, Integer value4, Boolean value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PermissionsRecord
     */
    public PermissionsRecord() {
        super(Permissions.PERMISSIONS);
    }

    /**
     * Create a detached, initialised PermissionsRecord
     */
    public PermissionsRecord(Integer id, String key, Short value, Integer owner, Boolean type, Integer server) {
        super(Permissions.PERMISSIONS);

        set(0, id);
        set(1, key);
        set(2, value);
        set(3, owner);
        set(4, type);
        set(5, server);
    }
}
