/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.records;


import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.Exceptions;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExceptionsRecord extends UpdatableRecordImpl<ExceptionsRecord> implements Record5<Long, Timestamp, String, String, String> {

    private static final long serialVersionUID = -986800954;

    /**
     * Setter for <code>redstonegang_common.exceptions.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>redstonegang_common.exceptions.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>redstonegang_common.exceptions.occurred</code>.
     */
    public void setOccurred(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>redstonegang_common.exceptions.occurred</code>.
     */
    public Timestamp getOccurred() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>redstonegang_common.exceptions.server</code>.
     */
    public void setServer(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>redstonegang_common.exceptions.server</code>.
     */
    public String getServer() {
        return (String) get(2);
    }

    /**
     * Setter for <code>redstonegang_common.exceptions.game</code>.
     */
    public void setGame(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>redstonegang_common.exceptions.game</code>.
     */
    public String getGame() {
        return (String) get(3);
    }

    /**
     * Setter for <code>redstonegang_common.exceptions.error</code>.
     */
    public void setError(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>redstonegang_common.exceptions.error</code>.
     */
    public String getError() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Timestamp, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Timestamp, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Exceptions.EXCEPTIONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Exceptions.EXCEPTIONS.OCCURRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Exceptions.EXCEPTIONS.SERVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Exceptions.EXCEPTIONS.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Exceptions.EXCEPTIONS.ERROR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getOccurred();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getServer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getGame();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getError();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getOccurred();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getServer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getGame();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getError();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExceptionsRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExceptionsRecord value2(Timestamp value) {
        setOccurred(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExceptionsRecord value3(String value) {
        setServer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExceptionsRecord value4(String value) {
        setGame(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExceptionsRecord value5(String value) {
        setError(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExceptionsRecord values(Long value1, Timestamp value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExceptionsRecord
     */
    public ExceptionsRecord() {
        super(Exceptions.EXCEPTIONS);
    }

    /**
     * Create a detached, initialised ExceptionsRecord
     */
    public ExceptionsRecord(Long id, Timestamp occurred, String server, String game, String error) {
        super(Exceptions.EXCEPTIONS);

        set(0, id);
        set(1, occurred);
        set(2, server);
        set(3, game);
        set(4, error);
    }
}
