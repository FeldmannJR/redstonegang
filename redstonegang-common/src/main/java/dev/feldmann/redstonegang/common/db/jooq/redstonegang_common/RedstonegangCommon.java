/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.common.db.jooq.redstonegang_common;


import dev.feldmann.redstonegang.common.db.jooq.DefaultCatalog;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.Exceptions;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.Expirations;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.GroupOptions;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.Groups;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.MoedaLogs;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.Permissions;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.PermissionsDesc;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.Punishments;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.PunishmentsReasons;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.PunishmentsReasonsDurations;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.Servers;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.Users;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RedstonegangCommon extends SchemaImpl {

    private static final long serialVersionUID = 905773781;

    /**
     * The reference instance of <code>redstonegang_common</code>
     */
    public static final RedstonegangCommon REDSTONEGANG_COMMON = new RedstonegangCommon();

    /**
     * The table <code>redstonegang_common.exceptions</code>.
     */
    public final Exceptions EXCEPTIONS = Exceptions.EXCEPTIONS;

    /**
     * The table <code>redstonegang_common.expirations</code>.
     */
    public final Expirations EXPIRATIONS = Expirations.EXPIRATIONS;

    /**
     * The table <code>redstonegang_common.groups</code>.
     */
    public final Groups GROUPS = Groups.GROUPS;

    /**
     * The table <code>redstonegang_common.group_options</code>.
     */
    public final GroupOptions GROUP_OPTIONS = GroupOptions.GROUP_OPTIONS;

    /**
     * The table <code>redstonegang_common.moeda_logs</code>.
     */
    public final MoedaLogs MOEDA_LOGS = MoedaLogs.MOEDA_LOGS;

    /**
     * The table <code>redstonegang_common.permissions</code>.
     */
    public final Permissions PERMISSIONS = Permissions.PERMISSIONS;

    /**
     * The table <code>redstonegang_common.permissions_desc</code>.
     */
    public final PermissionsDesc PERMISSIONS_DESC = PermissionsDesc.PERMISSIONS_DESC;

    /**
     * The table <code>redstonegang_common.punishments</code>.
     */
    public final Punishments PUNISHMENTS = Punishments.PUNISHMENTS;

    /**
     * The table <code>redstonegang_common.punishments_reasons</code>.
     */
    public final PunishmentsReasons PUNISHMENTS_REASONS = PunishmentsReasons.PUNISHMENTS_REASONS;

    /**
     * The table <code>redstonegang_common.punishments_reasons_durations</code>.
     */
    public final PunishmentsReasonsDurations PUNISHMENTS_REASONS_DURATIONS = PunishmentsReasonsDurations.PUNISHMENTS_REASONS_DURATIONS;

    /**
     * The table <code>redstonegang_common.servers</code>.
     */
    public final Servers SERVERS = Servers.SERVERS;

    /**
     * The table <code>redstonegang_common.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private RedstonegangCommon() {
        super("redstonegang_common", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Exceptions.EXCEPTIONS,
            Expirations.EXPIRATIONS,
            Groups.GROUPS,
            GroupOptions.GROUP_OPTIONS,
            MoedaLogs.MOEDA_LOGS,
            Permissions.PERMISSIONS,
            PermissionsDesc.PERMISSIONS_DESC,
            Punishments.PUNISHMENTS,
            PunishmentsReasons.PUNISHMENTS_REASONS,
            PunishmentsReasonsDurations.PUNISHMENTS_REASONS_DURATIONS,
            Servers.SERVERS,
            Users.USERS);
    }
}
