/*
 * This file is generated by jOOQ.
 */
package dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables;


import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.Indexes;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.Keys;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.RedstonegangCommon;
import dev.feldmann.redstonegang.common.db.jooq.redstonegang_common.tables.records.PunishmentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Punishments extends TableImpl<PunishmentsRecord> {

    private static final long serialVersionUID = -1077012640;

    /**
     * The reference instance of <code>redstonegang_common.punishments</code>
     */
    public static final Punishments PUNISHMENTS = new Punishments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PunishmentsRecord> getRecordType() {
        return PunishmentsRecord.class;
    }

    /**
     * The column <code>redstonegang_common.punishments.id</code>.
     */
    public final TableField<PunishmentsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>redstonegang_common.punishments.punish</code>.
     */
    public final TableField<PunishmentsRecord, String> PUNISH = createField("punish", org.jooq.impl.SQLDataType.VARCHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("'ban'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>redstonegang_common.punishments.user_id</code>.
     */
    public final TableField<PunishmentsRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>redstonegang_common.punishments.user_ip</code>.
     */
    public final TableField<PunishmentsRecord, String> USER_IP = createField("user_ip", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "");

    /**
     * The column <code>redstonegang_common.punishments.start</code>.
     */
    public final TableField<PunishmentsRecord, Timestamp> START = createField("start", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>redstonegang_common.punishments.end</code>.
     */
    public final TableField<PunishmentsRecord, Timestamp> END = createField("end", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>redstonegang_common.punishments.remove</code>.
     */
    public final TableField<PunishmentsRecord, Timestamp> REMOVE = createField("remove", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>redstonegang_common.punishments.op_punishment_id</code>.
     */
    public final TableField<PunishmentsRecord, Integer> OP_PUNISHMENT_ID = createField("op_punishment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>redstonegang_common.punishments.op_remove_id</code>.
     */
    public final TableField<PunishmentsRecord, Integer> OP_REMOVE_ID = createField("op_remove_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>redstonegang_common.punishments.punishment_reason_id</code>.
     */
    public final TableField<PunishmentsRecord, Integer> PUNISHMENT_REASON_ID = createField("punishment_reason_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>redstonegang_common.punishments.punishment_note</code>.
     */
    public final TableField<PunishmentsRecord, String> PUNISHMENT_NOTE = createField("punishment_note", org.jooq.impl.SQLDataType.VARCHAR(250).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>redstonegang_common.punishments.remove_reason_id</code>.
     */
    public final TableField<PunishmentsRecord, Integer> REMOVE_REASON_ID = createField("remove_reason_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>redstonegang_common.punishments.remove_note</code>.
     */
    public final TableField<PunishmentsRecord, String> REMOVE_NOTE = createField("remove_note", org.jooq.impl.SQLDataType.VARCHAR(250).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>redstonegang_common.punishments</code> table reference
     */
    public Punishments() {
        this(DSL.name("punishments"), null);
    }

    /**
     * Create an aliased <code>redstonegang_common.punishments</code> table reference
     */
    public Punishments(String alias) {
        this(DSL.name(alias), PUNISHMENTS);
    }

    /**
     * Create an aliased <code>redstonegang_common.punishments</code> table reference
     */
    public Punishments(Name alias) {
        this(alias, PUNISHMENTS);
    }

    private Punishments(Name alias, Table<PunishmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Punishments(Name alias, Table<PunishmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Punishments(Table<O> child, ForeignKey<O, PunishmentsRecord> key) {
        super(child, key, PUNISHMENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return RedstonegangCommon.REDSTONEGANG_COMMON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PUNISHMENTS_OP_PUNISHMENT_ID, Indexes.PUNISHMENTS_OP_REMOVE_ID, Indexes.PUNISHMENTS_PRIMARY, Indexes.PUNISHMENTS_PUNISHMENT_REASON_ID, Indexes.PUNISHMENTS_REMOVE_REASON_ID, Indexes.PUNISHMENTS_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PunishmentsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PUNISHMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PunishmentsRecord> getPrimaryKey() {
        return Keys.KEY_PUNISHMENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PunishmentsRecord>> getKeys() {
        return Arrays.<UniqueKey<PunishmentsRecord>>asList(Keys.KEY_PUNISHMENTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PunishmentsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PunishmentsRecord, ?>>asList(Keys.PUNISHMENTS_IBFK_1, Keys.PUNISHMENTS_IBFK_2, Keys.PUNISHMENTS_IBFK_3, Keys.PUNISHMENTS_IBFK_4, Keys.PUNISHMENTS_IBFK_5);
    }

    public Users punishmentsIbfk_1() {
        return new Users(this, Keys.PUNISHMENTS_IBFK_1);
    }

    public Users punishmentsIbfk_2() {
        return new Users(this, Keys.PUNISHMENTS_IBFK_2);
    }

    public Users punishmentsIbfk_3() {
        return new Users(this, Keys.PUNISHMENTS_IBFK_3);
    }

    public PunishmentsReasons punishmentsIbfk_4() {
        return new PunishmentsReasons(this, Keys.PUNISHMENTS_IBFK_4);
    }

    public PunishmentsReasons punishmentsIbfk_5() {
        return new PunishmentsReasons(this, Keys.PUNISHMENTS_IBFK_5);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Punishments as(String alias) {
        return new Punishments(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Punishments as(Name alias) {
        return new Punishments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Punishments rename(String name) {
        return new Punishments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Punishments rename(Name name) {
        return new Punishments(name, null);
    }
}
